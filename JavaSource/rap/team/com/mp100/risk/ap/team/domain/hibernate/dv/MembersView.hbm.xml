<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 
    Mapping file autogenerated by MyEclipse Persistence Tools
-->
<hibernate-mapping package="com.mp100.risk.ap.team.domain.hibernate.dv">
    <class name="MembersView" table="X_AP_MEMBERS">
        <comment>成员管理表</comment>
       <id name="membersId" type="java.lang.String">
            <column name="MEMBERS_ID" length="32">
            	<comment>审核员标识</comment>
            </column>
            <generator class="uuid.hex"></generator>
        </id>
        <property name="jobNumber" type="java.lang.String">
            <column name="JOB_NUMBER" length="10">
                <comment>工号</comment>
            </column>
        </property>
        <property name="chnName" type="java.lang.String">
            <column name="CHN_NAME" length="10">
                <comment>成员名称</comment>
            </column>
        </property>
        <property name="mobilePhone" type="java.lang.String">
            <column name="MOBILE_PHONE" length="11">
                <comment>手机号码</comment>
            </column>
        </property>
        <property name="state" type="java.lang.String">
            <column name="STATE" length="32">
                <comment>状态</comment>
            </column>
        </property>
        <property name="stateTime" type="java.util.Date">
            <column name="STATE_TIME" length="7">
                <comment>状态时间</comment>
            </column>
        </property>
        <property name="createDate" type="java.util.Date">
            <column name="CREATE_DATE" length="7">
                <comment>创建时间</comment>
            </column>
        </property>
        <property name="remark" type="java.lang.String">
            <column name="REMARK" length="128">
                <comment>备注</comment>
            </column>
        </property>
         <property name="passWord" type="java.lang.String">
            <column name="PASSWORD" length="20">
                <comment>密码</comment>
            </column>
        </property>
        <property name="orgId" type="java.lang.String">
            <column name="ORG_ID" length="32">
                <comment>组织标识</comment>
            </column>
        </property>
        <property name="groupId" type="java.lang.String">
            <column name="GROUP_ID" length="32">
                <comment>群组标识</comment>
            </column>
        </property>
        <property name="groupName" type="java.lang.String">
            <column name="GROUP_NAME" length="16">
                <comment>群组名称</comment>
            </column>
        </property>
    </class>
    	<!-- 查询成员总数量 -->
    <sql-query name="com.mp100.risk.ap.team.domain.hibernate.dv.queryMembersViewDV">
       <return alias="MembersView" class="com.mp100.risk.ap.team.domain.hibernate.dv.MembersView"></return>
     <![CDATA[
			     select 
			     		m.MEMBERS_ID,
			     		m.JOB_NUMBER,
			     		m.CHN_NAME,
			     		m.MOBILE_PHONE,
			     		(select TRANSLATION_CODE_FNC(m.STATE)  from dual) STATE,
			     		m.STATE_TIME,
			     		m.CREATE_DATE,
			     		m.REMARK,
			     		m.PASSWORD,
			     		m.ORG_ID,
			     		g.GROUP_ID as GROUP_ID,
			     		g.GROUP_NAME as GROUP_NAME
			     from		
			     		X_AP_MEMBERS m,X_AP_GROUP g
			     where	m.GROUP_ID = g.GROUP_ID
			     		and (m.STATE like :QT_state or  :QT_state is null)
			     		and (m.GROUP_ID like :QT_groupId or :QT_groupId is null)
			     		and (m.MEMBERS_ID like :QT_membersId or :QT_membersId is null)
			     				
      ]]>
    </sql-query>
    <!-- 查询成员的状态 -->
    <sql-query name="com.mp100.risk.ap.team.domain.hibernate.dv.queryMembersChangeStateDV">
       <return alias="MembersView" class="com.mp100.risk.ap.team.domain.hibernate.dv.MembersView"></return>
     <![CDATA[
			     select 
			     		m.MEMBERS_ID,
			     		m.JOB_NUMBER,
			     		m.CHN_NAME,
			     		m.MOBILE_PHONE,
			     		(select TRANSLATION_CODE_FNC(m.STATE)  from dual) STATE,
			     		m.STATE_TIME,
			     		m.CREATE_DATE,
			     		m.REMARK,
			     		m.PASSWORD,
			     		m.ORG_ID,
			     		g.GROUP_ID as GROUP_ID,
			     		g.GROUP_NAME as GROUP_NAME
			     from		
			     		X_AP_MEMBERS m,X_AP_GROUP g
			     where	m.GROUP_ID = g.GROUP_ID
			     		and (m.MEMBERS_ID like :QT_membersId or  :QT_membersId is null)
			     
      ]]>
    </sql-query>
    
    <sql-query name="com.mp100.risk.ap.team.domain.hibernate.dv.queryMembersSearchViewDV">
       <return alias="MembersView" class="com.mp100.risk.ap.team.domain.hibernate.dv.MembersView"></return>
     <![CDATA[
			     select 
			     		m.MEMBERS_ID,
			     		m.JOB_NUMBER,
			     		m.CHN_NAME,
			     		m.MOBILE_PHONE,
			     		(select TRANSLATION_CODE_FNC(m.STATE)  from dual) STATE,
			     		m.STATE_TIME,
			     		m.CREATE_DATE,
			     		m.REMARK,
			     		m.PASSWORD,
			     		m.ORG_ID,
			     		g.GROUP_ID as GROUP_ID,
			     		g.GROUP_NAME as GROUP_NAME
			     from		
			     		X_AP_MEMBERS m join X_AP_GROUP g on 
			     		m.GROUP_ID = g.GROUP_ID
			     where		
			     	    (m.JOB_NUMBER like :QT_chnName or :QT_chnName is null)
			     		or (m.CHN_NAME like :QT_chnName or :QT_chnName is null)
      ]]>
    </sql-query>
    <sql-query name="com.mp100.risk.ap.team.domain.hibernate.dv.queryMembersValidateViewDV">
       <return alias="MembersView" class="com.mp100.risk.ap.team.domain.hibernate.dv.MembersView"></return>
     <![CDATA[
			     select 
			     		m.MEMBERS_ID,
			     		m.JOB_NUMBER,
			     		m.CHN_NAME,
			     		m.MOBILE_PHONE,
			     		(select TRANSLATION_CODE_FNC(m.STATE)  from dual) STATE,
			     		m.STATE_TIME,
			     		m.CREATE_DATE,
			     		m.REMARK,
			     		m.PASSWORD,
			     		m.ORG_ID,
			     		g.GROUP_ID as GROUP_ID,
			     		g.GROUP_NAME as GROUP_NAME
			     from		
			     		X_AP_MEMBERS m,X_AP_GROUP g
			     where	m.GROUP_ID = g.GROUP_ID
			     		and (m.JOB_NUMBER like :QT_jobNumber or  :QT_jobNumber is null)
			     		and (m.CHN_NAME like :QT_chnName or :QT_chnName is null)
			     				
      ]]>
    </sql-query>
    
    <sql-query name="com.mp100.risk.ap.team.domain.hibernate.dv.queryMembersLoginViewDV">
       <return alias="MembersView" class="com.mp100.risk.ap.team.domain.hibernate.dv.MembersView"></return>
     <![CDATA[
			     select 
			     		m.MEMBERS_ID,
			     		m.JOB_NUMBER,
			     		m.CHN_NAME,
			     		m.MOBILE_PHONE,
			     		(select TRANSLATION_CODE_FNC(m.STATE)  from dual) STATE,
			     		m.STATE_TIME,
			     		m.CREATE_DATE,
			     		m.REMARK,
			     		m.PASSWORD,
			     		m.ORG_ID,
			     		p.PICTURE_ID as GROUP_ID,
			     		'' GROUP_NAME
			     from		
			     		X_AP_MEMBERS m join x_ap_members_picture p on 
			     		m.MEMBERS_ID = p.MEMBERS_ID
			     where		
			     	    (m.JOB_NUMBER = :QT_chnName and m.PASSWORD = :QT_passWord)
			     		or (m.MOBILE_PHONE = :QT_chnName and m.PASSWORD = :QT_passWord)
      ]]>
    </sql-query>
    
    <sql-query name="com.mp100.risk.ap.team.domain.hibernate.dv.queryMembersPicDV">
       <return alias="MembersView" class="com.mp100.risk.ap.team.domain.hibernate.dv.MembersView"></return>
     <![CDATA[
			     select 
			     		m.MEMBERS_ID,
			     		m.JOB_NUMBER,
			     		m.CHN_NAME,
			     		m.MOBILE_PHONE,
			     		(select TRANSLATION_CODE_FNC(m.STATE)  from dual) STATE,
			     		m.STATE_TIME,
			     		m.CREATE_DATE,
			     		m.REMARK,
			     		m.PASSWORD,
			     		m.ORG_ID,
			     		'' GROUP_ID,
			     		'' GROUP_NAME
			     from		
			     		X_AP_MEMBERS m,X_AP_MEMBERS_PICTURE p
			     where	m.MEMBERS_ID = p.MEMBERS_ID
			     		and (m.MEMBERS_ID like :QT_membersId or  :QT_membersId is null)
			     
      ]]>
    </sql-query>
    
     <sql-query name="com.mp100.risk.ap.team.domain.hibernate.dv.queryMembersValidateDV">
       <return alias="MembersView" class="com.mp100.risk.ap.team.domain.hibernate.dv.MembersView"></return>
     <![CDATA[
			     select 
			     		m.MEMBERS_ID,
			     		m.JOB_NUMBER,
			     		m.CHN_NAME,
			     		m.MOBILE_PHONE,
			     		(select TRANSLATION_CODE_FNC(m.STATE)  from dual) STATE,
			     		m.STATE_TIME,
			     		m.CREATE_DATE,
			     		m.REMARK,
			     		m.PASSWORD,
			     		m.ORG_ID,
			     		'' GROUP_ID,
			     		'' GROUP_NAME
			     from		
			     		X_AP_MEMBERS m,X_AP_MEMBERS_PICTURE p
			     where	m.MEMBERS_ID = p.MEMBERS_ID
			     		and (m.MEMBERS_ID like :QT_membersId or  :QT_membersId is null)
			     		and (m.PASSWORD like :QT_passWord or :QT_passWord is null)
			     
      ]]>
    </sql-query>
    
     <sql-query name="com.mp100.risk.ap.team.domain.hibernate.dv.queryMembersComplaintDV">
       <return alias="MembersView" class="com.mp100.risk.ap.team.domain.hibernate.dv.MembersView"></return>
     <![CDATA[
			     select 
			     		m.MEMBERS_ID,
			     		m.JOB_NUMBER,
			     		m.CHN_NAME,
			     		m.MOBILE_PHONE,
			     		(select TRANSLATION_CODE_FNC(m.STATE)  from dual) STATE,
			     		m.STATE_TIME,
			     		m.CREATE_DATE,
			     		m.REMARK,
			     		m.PASSWORD,
			     		m.ORG_ID,
			     		'' GROUP_ID,
			     		'' GROUP_NAME
			     from		
			     		X_AP_MEMBERS m,X_AP_MEMBERS_PICTURE p
			     where	m.MEMBERS_ID = p.MEMBERS_ID
			     		and (m.MEMBERS_ID like :QT_membersId or  :QT_membersId is null)
			     		and (m.PASSWORD like :QT_passWord or :QT_passWord is null)
			     
      ]]>
    </sql-query>
    
    <sql-query name="com.mp100.risk.ap.team.domain.hibernate.dv.queryMembersTaskDV">
       <return alias="MembersView" class="com.mp100.risk.ap.team.domain.hibernate.dv.MembersView"></return>
     <![CDATA[
			     select 
			     		m.MEMBERS_ID,
			     		m.JOB_NUMBER,
			     		m.CHN_NAME,
			     		m.MOBILE_PHONE,
			     		(select TRANSLATION_CODE_FNC(m.STATE)  from dual) STATE,
			     		m.STATE_TIME,
			     		m.CREATE_DATE,
			     		m.REMARK,
			     		m.PASSWORD,
			     		m.ORG_ID,
			     		'' GROUP_ID,
			     		'' GROUP_NAME
			     from		
			     		X_AP_MEMBERS m
			     where  
			     		(m.MEMBERS_ID like :QT_membersId or  :QT_membersId is null)		
			     
      ]]>
    </sql-query>
    
</hibernate-mapping>
