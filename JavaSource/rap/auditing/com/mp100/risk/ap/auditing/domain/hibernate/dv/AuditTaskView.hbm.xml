<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 
    Mapping file autogenerated by MyEclipse Persistence Tools
-->
<hibernate-mapping package="com.mp100.risk.ap.auditing.domain.hibernate.dv">
    <class name="AuditTaskView" table="X_AP_AUDIT_TASK">
        <comment>审批任务表</comment>
        <id name="auditTaskId" type="java.lang.String">
            <column name="AUDIT_TASK_ID" length="32">
            	<comment>审核任务标识</comment>
            </column>
        </id>
         <property name="msg" type="java.lang.String">
            <column name="MSG" length="3024">
                <comment>短信内容</comment>
            </column>
        </property>
        
          <property name="custName" type="java.lang.String">
            <column name="CUST_NAME" length="32">
                <comment>客户名称</comment>
            </column>
        </property>
        
          <property name="custGrade" type="java.lang.String">
            <column name="CUST_GRADE" length="32">
                <comment>客户等级</comment>
            </column>
        </property>
        
        
        
        <property name="createTime" type="java.util.Date">
            <column name="CREATE_TIME" length="7">
                <comment>创建时间</comment>
            </column>
        </property>
         <property name="personDecide" type="java.lang.String">
            <column name="PERSON_DECIDE" length="32">
                <comment>人工判定策略</comment>
            </column>
        </property>
        
        <property name="decideType" type="java.lang.String">
            <column name="DECIDE_TYPE" length="32">
                <comment>任务类型</comment>
            </column>
        </property>
        
         <property name="decideResult" type="java.lang.String">
            <column name="DECIDE_RESULT" length="32">
                <comment>团队判定结果</comment>
            </column>
        </property>
         <property name="reason" type="java.lang.String">
            <column name="REASON" length="32">
                <comment>结论依据</comment>
            </column>
        </property>
        
       
       </class>
       
        <sql-query name="com.mp100.risk.ap.auditing.domain.hibernate.dv.queryAuditTaskListDV">
          <return alias="AuditTaskView" class="com.mp100.risk.ap.auditing.domain.hibernate.dv.AuditTaskView"></return>
           <![CDATA[
		 		select 
     					a.AUDIT_TASK_ID  as AUDIT_TASK_ID,
						a.MSG            as MSG,
						a.cust_name      as CUST_NAME,
						a.CUST_GRADE     as CUST_GRADE,
						a.create_time    as CREATE_TIME,
						a.PERSON_DECIDE  as PERSON_DECIDE,
            			a.DECIDE_TYPE    as DECIDE_TYPE,
						a.DECIDE_RESULT    as DECIDE_RESULT,
            			nvl(b.CUST_NAME,0) as REASON
 				from
 						(select * from ( select SE.*,  ROWNUM rownum_ from (select SED.* from(  
				                select 
										t.audit_task_id  as AUDIT_TASK_ID,
										t.msg            as MSG,
										c.cust_name      as CUST_NAME,
										g.service_name   as CUST_GRADE,
										t.create_time    as CREATE_TIME,
										t.PERSON_DECIDE  as PERSON_DECIDE,
									    t.TEXTCATE_ID    as DECIDE_TYPE,
										'my'             as DECIDE_RESULT,
				                        h.REASON         as REASON
								 from 
								 		x_ap_audit_task t,x_ap_pend_task_pool p,biz_cust c,biz_cust_service_grade cg,biz_service_grade g,X_AP_MACHINE_DECIDE_INFO h
								 where 
								 		t.audit_task_id=p.audit_task_id 
										 and  t.cust_id=c.cust_id
										 and  c.cust_id=cg.cust_id
										 and  cg.service_grade_id=g.service_grade_id
										 and  p.IS_LOCK=0
										 and (p.MEMBERS_ID like :QT_membersId or  :QT_membersId is null)
										 and t.STATE='XF003501'
				             			 and t.audit_task_id=h.audit_task_id
										 and h.LABEL_ID='XF003408'
							    UNION ALL
							    
							    select 
										t.audit_task_id       as AUDIT_TASK_ID,
										t.msg                 as MSG,
										c.cust_name           as CUST_NAME,
										g.service_name        as CUST_GRADE,
										tem.submit_time       as CREATE_TIME,
										t.PERSON_DECIDE       as PERSON_DECIDE,
										tem.DECIDE_TYPE       as DECIDE_TYPE,
										'others'              as DECIDE_RESULT,
				            			h.REASON  as REASON
				            
								 from 
								 		x_ap_audit_task t,x_Ap_Term_Decide tem ,biz_cust c,biz_cust_service_grade cg,biz_service_grade g,X_AP_MACHINE_DECIDE_INFO h
						          where 
						                 t.audit_task_id=tem.audit_task_id
							             and  t.cust_id=c.cust_id
										 and  c.cust_id=cg.cust_id
										 and  cg.service_grade_id=g.service_grade_id
					           			 and  t.audit_task_id=h.audit_task_id
										 and  h.LABEL_ID='XF003408'
										 and  (tem.MEMBERS_ID like :QT_membersId or  :QT_membersId is null)
						             	 and  tem.decide_result is null
						             	 and  tem.decide_time is null
				
						             
						           )  SED order by SED.create_time  
				                ) SE 
				           	WHERE ROWNUM <= :QT_munber 
						) where rownum_ >0) a,
			    	(select  
				              sys_guid() AUDIT_TASK_ID,
				              m.reason as  MSG,
				              count(m.reason) as CUST_NAME,
				              c.cust_id as CUST_GRADE,
						      c.cust_name as CREATE_TIME,
						      '' PERSON_DECIDE,
						      '' DECIDE_TYPE,
						      '' DECIDE_RESULT,
						      '' REASON
					from 
							  x_ap_audit_task t,biz_cust c,x_ap_machine_decide_info m
	 				where 
	 						   m.LABEL_ID ='XF003408'
	 						   and t.person_decide='00'
							   and t.cust_id = c.cust_id
	              			   and m.audit_task_id = t.audit_task_id
	              			   and ((to_char(t.CREATE_TIME,'yyyy-mm-dd')) = (to_char(sysdate,'yyyy-mm-dd')))
	                group by c.cust_id,m.reason,c.cust_name) b
			                       
                     where 	a.CUST_NAME=b.CREATE_TIME(+)
                     		and a.REASON=b.MSG(+)
						 
           ]]>
          </sql-query>
        
       <sql-query name="com.mp100.risk.ap.auditing.domain.hibernate.dv.queryEvaluationTaskListDV">
          <return alias="AuditTaskView" class="com.mp100.risk.ap.auditing.domain.hibernate.dv.AuditTaskView"></return>
           <![CDATA[
           		select * from ( select SE.*,  ROWNUM rownum_ from (
		           		select 
								t.audit_task_id  as AUDIT_TASK_ID,
								t.msg as MSG,
								c.cust_name as CUST_NAME,
								g.service_name as CUST_GRADE,
								t.create_time as CREATE_TIME,
		            			t.PERSON_DECIDE as PERSON_DECIDE,
		            			'' DECIDE_TYPE,
		           				'' DECIDE_RESULT,
		           				'' REASON
		           				
						 from 
						 		x_ap_audit_task t,biz_cust c,biz_cust_service_grade cg,biz_service_grade g
						 where 
								 t.cust_id=c.cust_id
								 and  c.cust_id=cg.cust_id
								 and  cg.service_grade_id=g.service_grade_id
		             			 and  t.state ='XF003502'
		         		group by 
		         				t.audit_task_id,t.msg,c.cust_name, g.service_name,t.create_time ,t.PERSON_DECIDE
		         				
						order by 
								t.CREATE_TIME desc)SE 
           				WHERE rownum <=100
				) where rownum_ >0   
					
           ]]>
          </sql-query>	 
          
          <sql-query name="com.mp100.risk.ap.auditing.domain.hibernate.dv.queryAuditTaskListMyDV">
          <return alias="AuditTaskView" class="com.mp100.risk.ap.auditing.domain.hibernate.dv.AuditTaskView"></return>
           <![CDATA[
            select
            			a.AUDIT_TASK_ID  as AUDIT_TASK_ID,
						a.MSG            as MSG,
						a.cust_name      as CUST_NAME,
						a.CUST_GRADE     as CUST_GRADE,
						a.create_time    as CREATE_TIME,
						a.PERSON_DECIDE  as PERSON_DECIDE,
            			a.DECIDE_TYPE    as DECIDE_TYPE,
						a.DECIDE_RESULT    as DECIDE_RESULT,
                  		NVL(b.CUST_NAME,0) as  REASON
     	    from 
      			(select 
						t.audit_task_id  as AUDIT_TASK_ID,
						t.msg            as MSG,
						c.cust_name      as CUST_NAME,
						g.service_name   as CUST_GRADE,
						t.create_time    as CREATE_TIME,
						t.PERSON_DECIDE  as PERSON_DECIDE,
					    t.TEXTCATE_ID    as DECIDE_TYPE,
						'my'             as DECIDE_RESULT,
						h.REASON         as REASON
				 from 
				 		x_ap_audit_task t,x_ap_pend_task_pool p,biz_cust c,biz_cust_service_grade cg,biz_service_grade g,X_AP_MACHINE_DECIDE_INFO h
				 where 
				 		 t.audit_task_id=p.audit_task_id 
						 and  t.cust_id=c.cust_id
						 and  c.cust_id=cg.cust_id
						 and  cg.service_grade_id=g.service_grade_id
						 and  p.IS_LOCK=0
              			 and t.audit_task_id=h.audit_task_id
						 and h.LABEL_ID='XF003408'
						 and (t.audit_task_id like :QT_auditTaskId or  :QT_auditTaskId is null)) a,
        
        		(select  
				              sys_guid() AUDIT_TASK_ID,
				              m.reason as  MSG,
				              count(m.reason) as CUST_NAME,
				              c.cust_id as CUST_GRADE,
						      c.cust_name as CREATE_TIME,
						      '' PERSON_DECIDE,
						      '' DECIDE_TYPE,
						      '' DECIDE_RESULT,
						      '' REASON
					from 
							  x_ap_audit_task t,biz_cust c,x_ap_machine_decide_info m
	 				where 
	 						   m.LABEL_ID ='XF003408'
	 						   and t.person_decide='00'
							   and t.cust_id = c.cust_id
	              			   and m.audit_task_id = t.audit_task_id
	              			   and ((to_char(t.CREATE_TIME,'yyyy-mm-dd')) = (to_char(sysdate,'yyyy-mm-dd')))
	                group by 
	                		   c.cust_id,m.reason,c.cust_name) b     
   
             where 			a.CUST_NAME=b.CREATE_TIME(+)
                     		and a.REASON=b.MSG(+)
           ]]>
          </sql-query>  
          
          
           <sql-query name="com.mp100.risk.ap.auditing.domain.hibernate.dv.queryAuditTaskListMyOthersDV">
          <return alias="AuditTaskView" class="com.mp100.risk.ap.auditing.domain.hibernate.dv.AuditTaskView"></return>
           <![CDATA[
           select
            			a.AUDIT_TASK_ID  as AUDIT_TASK_ID,
						a.MSG            as MSG,
						a.cust_name      as CUST_NAME,
						a.CUST_GRADE     as CUST_GRADE,
						a.create_time    as CREATE_TIME,
						a.PERSON_DECIDE  as PERSON_DECIDE,
            			a.DECIDE_TYPE    as DECIDE_TYPE,
						a.DECIDE_RESULT    as DECIDE_RESULT,
                  		NVL(b.CUST_NAME,0) as  REASON
     	    from 
      			( select 
						t.audit_task_id       as AUDIT_TASK_ID,
						t.msg                 as MSG,
						c.cust_name           as CUST_NAME,
						g.service_name        as CUST_GRADE,
						tem.submit_time       as CREATE_TIME,
						t.PERSON_DECIDE       as PERSON_DECIDE,
						tem.DECIDE_TYPE       as  DECIDE_TYPE,
						'others'              as DECIDE_RESULT,
						h.REASON              as REASON
				 from 
				 		x_ap_audit_task t,x_Ap_Term_Decide tem ,biz_cust c,biz_cust_service_grade cg,biz_service_grade g,X_AP_MACHINE_DECIDE_INFO h
		          where 
		                  t.audit_task_id=tem.audit_task_id
		             and  t.cust_id=c.cust_id
					 and  c.cust_id=cg.cust_id
					 and  cg.service_grade_id=g.service_grade_id
		             and (tem.MEMBERS_ID like :QT_membersId or  :QT_membersId is null)
		             and  tem.decide_result is null
		             and tem.decide_time is null
		             and t.audit_task_id=h.audit_task_id
					 and h.LABEL_ID='XF003408'
		             and (t.audit_task_id like :QT_auditTaskId or  :QT_auditTaskId is null)) a,
        
        		(select  
				              sys_guid() AUDIT_TASK_ID,
				              m.reason as  MSG,
				              count(m.reason) as CUST_NAME,
				              c.cust_id as CUST_GRADE,
						      c.cust_name as CREATE_TIME,
						      '' PERSON_DECIDE,
						      '' DECIDE_TYPE,
						      '' DECIDE_RESULT,
						      '' REASON
					from 
							  x_ap_audit_task t,biz_cust c,x_ap_machine_decide_info m
	 				where 
	 						   m.LABEL_ID ='XF003408'
	 						   and t.person_decide='00'
							   and t.cust_id = c.cust_id
	              			   and m.audit_task_id = t.audit_task_id
	              			   and ((to_char(t.CREATE_TIME,'yyyy-mm-dd')) = (to_char(sysdate,'yyyy-mm-dd')))
	                group by 
	                		   c.cust_id,m.reason,c.cust_name) b     
   
             where 			a.CUST_NAME=b.CREATE_TIME(+)
                     		and a.REASON=b.MSG(+)
           
           
              
           ]]>
          </sql-query>  
          
          <sql-query name="com.mp100.risk.ap.auditing.domain.hibernate.dv.queryTaskDetailDV">
          <return alias="AuditTaskView" class="com.mp100.risk.ap.auditing.domain.hibernate.dv.AuditTaskView"></return>
           <![CDATA[
	           		select 
							t.audit_task_id  as AUDIT_TASK_ID,
							t.msg as MSG,
							c.cust_name as CUST_NAME,
							g.service_name as CUST_GRADE,
							t.create_time as CREATE_TIME,
	            			t.PERSON_DECIDE as PERSON_DECIDE,
	            			'' DECIDE_TYPE,
	           				'' DECIDE_RESULT,
	           				'' REASON
	           				
					 from 
					 		x_ap_audit_task t,biz_cust c,biz_cust_service_grade cg,biz_service_grade g,X_AP_MACHINE_DECIDE_INFO info
					 where 
							 t.cust_id=c.cust_id
							 and  c.cust_id=cg.cust_id
							 and  cg.service_grade_id=g.service_grade_id
	             			 and  t.state ='XF003502'
	                         and (t.audit_task_id like :QT_auditTaskId or  :QT_auditTaskId is null)
	                         
	         		group by 
	         				t.audit_task_id,t.msg,c.cust_name, g.service_name,t.create_time ,t.PERSON_DECIDE
	         				
					order by 
							t.CREATE_TIME desc
					
           ]]>
          </sql-query>	  
          
          <sql-query name="com.mp100.risk.ap.auditing.domain.hibernate.dv.queryComplainBackMatchViewDV">
          <return alias="AuditTaskView" class="com.mp100.risk.ap.auditing.domain.hibernate.dv.AuditTaskView"></return>
           <![CDATA[
    				select 
							sys_guid() AUDIT_TASK_ID,
							c.sms_content as MSG,
						    p.port_no as  CUST_NAME,
							t.MEMBERS_ID as CUST_GRADE,
							'' CREATE_TIME,
	            			'' PERSON_DECIDE,
	            			'' DECIDE_TYPE,
	           				'' DECIDE_RESULT,
	           				'' REASON
					from 	ep_sms_send_batch_current b,ep_sms_send_content_current c,ep_sms_send_num_current n,
							x_ap_audit_task t,x_ap_audit_task_sms s,biz_port p
					where 	
							b.SMS_BATCH_CODE = c.SMS_BATCH_CODE 
              				and c.SMS_BATCH_CODE = n.SMS_BATCH_CODE 
							and n.SMS_CONTENT_CODE=c.SMS_CONTENT_CODE
							and s.SMS_BATCH_CODE = b.SMS_BATCH_CODE 
							and t.AUDIT_TASK_ID = s.AUDIT_TASK_ID
							and p.cust_id = t.cust_id	
							
							and (p.PORT_NO = :QT_port or :QT_port is null) 
							and t.PERSON_DECIDE ='00'
							and t.state='XF003502'
    						and (to_char(t.STATE_TIME,'yyyy-mm-dd')>= :QD_month)
         			group by 
         					c.sms_content,p.port_no,t.MEMBERS_ID		
           ]]>
          </sql-query>
          
          <sql-query name="com.mp100.risk.ap.auditing.domain.hibernate.dv.queryComplainBackPhoneListDV">
          <return alias="AuditTaskView" class="com.mp100.risk.ap.auditing.domain.hibernate.dv.AuditTaskView"></return>
           <![CDATA[
    				select
				              '' AUDIT_TASK_ID,
				              c.sms_content as MSG,
				              p.port_no as  CUST_NAME,
				              t.MEMBERS_ID as CUST_GRADE,
				              '' CREATE_TIME,
				              n.phone_num as  PERSON_DECIDE,
				              '' DECIDE_TYPE,
				              '' DECIDE_RESULT,
				              '' REASON
					from 	ep_sms_send_batch_current b,ep_sms_send_content_current c,ep_sms_send_num_current n,
							x_ap_audit_task t,x_ap_audit_task_sms s,biz_port p
					where 	
							b.SMS_BATCH_CODE = c.SMS_BATCH_CODE 
              				and c.SMS_BATCH_CODE = n.SMS_BATCH_CODE 
							and n.SMS_CONTENT_CODE=c.SMS_CONTENT_CODE
							and s.SMS_BATCH_CODE = b.SMS_BATCH_CODE 
							and t.AUDIT_TASK_ID = s.AUDIT_TASK_ID
							and p.cust_id = t.cust_id		
							
							and (p.PORT_NO = :QT_port or :QT_port is null) 
							and t.PERSON_DECIDE ='00'
							and t.state='XF003502'
    						and (to_char(t.STATE_TIME,'yyyy-mm-dd')>= :QD_month)
          			group by 
          					c.sms_content,    p.port_no,  t.MEMBERS_ID,n.phone_num		
           ]]>
          </sql-query>
          <!-- 查询出每个月中每个人审核的短信总量  -->
          <sql-query name="com.mp100.risk.ap.auditing.domain.hibernate.dv.queryContentListDV">
          <return alias="AuditTaskView" class="com.mp100.risk.ap.auditing.domain.hibernate.dv.AuditTaskView"></return>
           <![CDATA[
    				select
            				sys_guid() AUDIT_TASK_ID,
				            ''  MSG,
				            t.MEMBERS_ID as  CUST_NAME,
				             to_char(t.STATE_TIME,'yyyymm') as  CUST_GRADE,
				            '' CREATE_TIME,
				            count(t.PERSON_DECIDE) as PERSON_DECIDE,
				            '' DECIDE_TYPE,
				            '' DECIDE_RESULT,
				            '' REASON
					from 	
					        x_ap_audit_task t,x_ap_members m
					where 
					        t.STATE ='XF003502'
						    and m.MEMBERS_ID = t.MEMBERS_ID
						    and (to_char(t.STATE_TIME,'yyyymm') in (:QD_months))
					group by   
						    to_char(t.STATE_TIME,'yyyymm'), t.MEMBERS_ID
           ]]>
          </sql-query> 
          
        <!--查询每个月每个人的审核放行短信总量-->
	    <sql-query name="com.mp100.risk.ap.team.domain.hibernate.dv.queryPassNumDV">
	       <return alias="AuditTaskView" class="com.mp100.risk.ap.auditing.domain.hibernate.dv.AuditTaskView"></return>
	     <![CDATA[
				select
			            sys_guid() AUDIT_TASK_ID,
			            ''  MSG,
			            t.MEMBERS_ID as  CUST_NAME,
			            to_char(t.STATE_TIME,'yyyymm') as  CUST_GRADE,
			            '' CREATE_TIME,
			            count(t.PERSON_DECIDE) as PERSON_DECIDE,
			            '' DECIDE_TYPE,
			            '' DECIDE_RESULT,
			            '' REASON
				from 	
	       				x_ap_audit_task t,x_ap_members m
				where 
					    t.PERSON_DECIDE='00'
					    and t.STATE ='XF003502'
					    and m.MEMBERS_ID = t.MEMBERS_ID
					    and (to_char(t.STATE_TIME,'yyyymm') in (:QD_months))
				group by   
						to_char(t.STATE_TIME,'yyyymm'),t.MEMBERS_ID	
	      ]]>
	    </sql-query>
	    
	    <!--查询每个月每个人的审核拦截短信总量-->
	    <sql-query name="com.mp100.risk.ap.team.domain.hibernate.dv.queryInterceptNumDV">
	       <return alias="AuditTaskView" class="com.mp100.risk.ap.auditing.domain.hibernate.dv.AuditTaskView"></return>
	     <![CDATA[
				select
			            sys_guid() AUDIT_TASK_ID,
			            ''  MSG,
			            t.MEMBERS_ID as  CUST_NAME,
			            to_char(t.STATE_TIME,'yyyymm') as CUST_GRADE,
			            '' CREATE_TIME,
			            count(t.PERSON_DECIDE) as PERSON_DECIDE,
			            '' DECIDE_TYPE,
			            '' DECIDE_RESULT,
			            '' REASON
				from 	
	      			 	x_ap_audit_task t,x_ap_members m
				where 
					    t.PERSON_DECIDE='01'
					    and t.STATE ='XF003502'
					    and m.MEMBERS_ID = t.MEMBERS_ID
					    and (to_char(t.STATE_TIME,'yyyymm') in (:QD_months))
				group by   
						to_char(t.STATE_TIME,'yyyymm'),t.MEMBERS_ID
						
	      ]]>
	    </sql-query>
	    
	    <!--查询每个人每天审核的短信总量  -->
	    <sql-query name="com.mp100.risk.ap.team.domain.hibernate.dv.queryMemberTotalDV">
	       <return alias="AuditTaskView" class="com.mp100.risk.ap.auditing.domain.hibernate.dv.AuditTaskView"></return>
	     <![CDATA[
				select 
      					  sys_guid() AUDIT_TASK_ID,
      					  '' MSG,
      					  m.CHN_NAME as CUST_NAME,
					      count(t.MEMBERS_ID) as CUST_GRADE,
					      '' CREATE_TIME,
					      '' PERSON_DECIDE,
					      t.MEMBERS_ID  as  DECIDE_TYPE,
					      '' DECIDE_RESULT,
					      '' REASON
				from
				          x_ap_audit_task t,x_ap_members m
				where 
					      t.MEMBERS_ID = m.MEMBERS_ID
					      and ((to_char(t.CREATE_TIME,'yyyy-mm-dd')) = (to_char(sysdate,'yyyy-mm-dd')))
					      and t.state='XF003502'
				group by
				      	  t.MEMBERS_ID,m.CHN_NAME
				order by    
				      	  count(t.MEMBERS_ID) desc
						
	      ]]>
	    </sql-query>
	    <!--查询每个人每天审核的短信放行总量  -->
	    <sql-query name="com.mp100.risk.ap.team.domain.hibernate.dv.queryMemberPassDV">
	       <return alias="AuditTaskView" class="com.mp100.risk.ap.auditing.domain.hibernate.dv.AuditTaskView"></return>
	     <![CDATA[
				select 
					      sys_guid() AUDIT_TASK_ID,
					      '' MSG,
					      m.CHN_NAME as CUST_NAME,
					      count(t.MEMBERS_ID) as CUST_GRADE,
					      '' CREATE_TIME,
					      '' PERSON_DECIDE,
					      t.MEMBERS_ID  as  DECIDE_TYPE,
					      '' DECIDE_RESULT,
					      '' REASON
				from
					      x_ap_audit_task t,x_ap_members m
				where 
					      t.MEMBERS_ID = m.MEMBERS_ID
					      and ((to_char(t.CREATE_TIME,'yyyy-mm-dd')) = (to_char(sysdate,'yyyy-mm-dd')))
					      and PERSON_DECIDE ='00'
					      and t.state='XF003502'
				group by
					      t.MEMBERS_ID,m.CHN_NAME
				order by    
					      count(t.MEMBERS_ID) desc
	      ]]>
	    </sql-query>
	    
	    <!--查询除了登录成员所有人每天审核的短信总量  -->
	    <sql-query name="com.mp100.risk.ap.team.domain.hibernate.dv.queryexceptMemberTotalDV">
	       <return alias="AuditTaskView" class="com.mp100.risk.ap.auditing.domain.hibernate.dv.AuditTaskView"></return>
	     <![CDATA[
				select 
						  sys_guid() AUDIT_TASK_ID,
      					  '' MSG,
      					  '' CUST_NAME,
					      sum(CUST_GRADE) as CUST_GRADE,
					      '' CREATE_TIME,
					      '' PERSON_DECIDE,
					      '' DECIDE_TYPE,
					      '' DECIDE_RESULT,
					      '' REASON
				from		
					(select 
	      					  sys_guid() AUDIT_TASK_ID,
	      					  '' MSG,
	      					  m.CHN_NAME as CUST_NAME,
						      count(t.MEMBERS_ID) as CUST_GRADE,
						      '' CREATE_TIME,
						      '' PERSON_DECIDE,
						      t.MEMBERS_ID  as  DECIDE_TYPE,
						      '' DECIDE_RESULT
					from
					          x_ap_audit_task t,x_ap_members m
					where 
						      t.MEMBERS_ID = m.MEMBERS_ID
						      and ((to_char(t.CREATE_TIME,'yyyy-mm-dd')) = (to_char(sysdate,'yyyy-mm-dd')))
						      and t.state='XF003502'
						      and (t.MEMBERS_ID != :QT_membersId or  :QT_membersId is null)
					group by
					      	  t.MEMBERS_ID,m.CHN_NAME)
	      ]]>
	    </sql-query>
	    
	    <!--查询除了登录成员所有人每天审核的短信放行总量  -->
	    <sql-query name="com.mp100.risk.ap.team.domain.hibernate.dv.queryexceptMemberPassDV">
	       <return alias="AuditTaskView" class="com.mp100.risk.ap.auditing.domain.hibernate.dv.AuditTaskView"></return>
	     <![CDATA[
				select 
						  sys_guid() AUDIT_TASK_ID,
      					  '' MSG,
      					  '' CUST_NAME,
					      sum(CUST_GRADE) as CUST_GRADE,
					      '' CREATE_TIME,
					      '' PERSON_DECIDE,
					      '' DECIDE_TYPE,
					      '' DECIDE_RESULT,
					      '' REASON
				from		
					(select 
						      sys_guid() AUDIT_TASK_ID,
						      '' MSG,
						      m.CHN_NAME as CUST_NAME,
						      count(t.MEMBERS_ID) as CUST_GRADE,
						      '' CREATE_TIME,
						      '' PERSON_DECIDE,
						      t.MEMBERS_ID  as  DECIDE_TYPE,
						      '' DECIDE_RESULT,
						      '' REASON
					from
						      x_ap_audit_task t,x_ap_members m
					where 
						      t.MEMBERS_ID = m.MEMBERS_ID
						      and ((to_char(t.CREATE_TIME,'yyyy-mm-dd')) = (to_char(sysdate,'yyyy-mm-dd')))
						      and PERSON_DECIDE ='00'
						      and t.state='XF003502'
						      and (t.MEMBERS_ID != :QT_membersId or  :QT_membersId is null)
					group by
						      t.MEMBERS_ID,m.CHN_NAME)
				
	      ]]>
	    </sql-query>
	    
	    <!-- 查询当前登录的成员 -->
	    <sql-query name="com.mp100.risk.ap.team.domain.hibernate.dv.queryLoginMemberDV">
	       <return alias="AuditTaskView" class="com.mp100.risk.ap.auditing.domain.hibernate.dv.AuditTaskView"></return>
	     <![CDATA[
				select 
					      sys_guid() AUDIT_TASK_ID,
					      '' MSG,
					      m.CHN_NAME as CUST_NAME,
					      '' CUST_GRADE,
					      '' CREATE_TIME,
					      '' PERSON_DECIDE,
					      t.MEMBERS_ID  as  DECIDE_TYPE,
					      '' DECIDE_RESULT,
					      '' REASON
				from
					      x_ap_audit_task t,x_ap_members m
				where 
					      t.MEMBERS_ID = m.MEMBERS_ID
					      and ((to_char(t.CREATE_TIME,'yyyy-mm-dd')) = (to_char(sysdate,'yyyy-mm-dd')))
					      and (t.MEMBERS_ID like :QT_membersId or  :QT_membersId is null)
				group by
					      t.MEMBERS_ID,m.CHN_NAME
	      ]]>
	    </sql-query>
	    
	     <!--查询登录成员当天已审短信总量 -->
	    <sql-query name="com.mp100.risk.ap.team.domain.hibernate.dv.queryLoginMemberTotalDV">
	       <return alias="AuditTaskView" class="com.mp100.risk.ap.auditing.domain.hibernate.dv.AuditTaskView"></return>
	     <![CDATA[
				select 
      					  sys_guid() AUDIT_TASK_ID,
      					  '' MSG,
      					  m.CHN_NAME as CUST_NAME,
					      count(t.MEMBERS_ID) as CUST_GRADE,
					      '' CREATE_TIME,
					      '' PERSON_DECIDE,
					      t.MEMBERS_ID  as  DECIDE_TYPE,
					      '' DECIDE_RESULT,
					      '' REASON
				from
				          x_ap_audit_task t,x_ap_members m
				where 
					      t.MEMBERS_ID = m.MEMBERS_ID
					      and ((to_char(t.CREATE_TIME,'yyyy-mm-dd')) = (to_char(sysdate,'yyyy-mm-dd')))
					      and t.state='XF003502'
					      and (t.MEMBERS_ID = :QT_membersId or  :QT_membersId is null)
				group by
				      	  t.MEMBERS_ID,m.CHN_NAME
				order by    
				      	  count(t.MEMBERS_ID) desc
						
	      ]]>
	    </sql-query>
	    
	    <!--对接网关放行(按照任务ID查批次流水表和号码表推送到网关) -->
	    <sql-query name="com.mp100.risk.ap.team.domain.hibernate.dv.queryDockingGatewayDV">
	       <return alias="AuditTaskView" class="com.mp100.risk.ap.auditing.domain.hibernate.dv.AuditTaskView"></return>
	     <![CDATA[
				select 
					      sys_guid() AUDIT_TASK_ID,
					      curr.INTERFACE_ID as  MSG,
					      t.PERSON_DECIDE as CUST_NAME,
					      '' CUST_GRADE,
					      '' CREATE_TIME,
					      '' PERSON_DECIDE,
					      '' DECIDE_TYPE,
					      '' DECIDE_RESULT,
					      '' REASON
				from
					      x_ap_audit_task t,X_AP_AUDIT_TASK_SMS sms,EP_SMS_SEND_BATCH_CURRENT curr
				where 
						 
               			  t.STATE = 'XF003502'
						  and sms.SMS_BATCH_CODE = curr.SMS_BATCH_CODE
						  and (sms.AUDIT_TASK_ID in (:QT_taskId))
				group by 
						  curr.INTERFACE_ID,
      					  t.PERSON_DECIDE
	      ]]>
	    </sql-query>
	    
	     <sql-query name="com.mp100.risk.ap.auditing.domain.hibernate.dv.queryTotalAuditTaskDV">
          <return alias="AuditTaskView" class="com.mp100.risk.ap.auditing.domain.hibernate.dv.AuditTaskView"></return>
           <![CDATA[
                select 
						t.audit_task_id  as AUDIT_TASK_ID,
						t.msg            as MSG,
						c.cust_name      as CUST_NAME,
						g.service_name   as CUST_GRADE,
						t.create_time    as CREATE_TIME,
						t.PERSON_DECIDE  as PERSON_DECIDE,
					    t.TEXTCATE_ID    as DECIDE_TYPE,
						'my'             as DECIDE_RESULT,
						t.state          as REASON
				 from 
				 		x_ap_audit_task t,x_ap_pend_task_pool p,biz_cust c,biz_cust_service_grade cg,biz_service_grade g
				 where 
				 		 t.audit_task_id=p.audit_task_id 
						 and  t.cust_id=c.cust_id
						 and  c.cust_id=cg.cust_id
						 and  cg.service_grade_id=g.service_grade_id
						 and  p.IS_LOCK=0
           ]]>
          </sql-query>  
          
</hibernate-mapping>
